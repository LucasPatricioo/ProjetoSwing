/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projetoaula;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import projetoaula.Model.projeto;
import projetoaula.Model.requisito;
import projetoaula.Model.usuario;
import projetoaula.Persistencia.JDBCprojeto;
import projetoaula.Persistencia.JDBCrequisito;
import projetoaula.Persistencia.JDBCusuario;
import projetoaula.Persistencia.conexao;

/**
 *
 * @author thiag
 */
public class FrmRelReq extends javax.swing.JFrame {

    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");

    /**
     * Creates new form FrmRelReq
     */
    public FrmRelReq() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listReq = new javax.swing.JList<>();
        txtAuthorReq = new javax.swing.JTextField();
        txtNomeReq = new javax.swing.JTextField();
        txtIdReq = new javax.swing.JTextField();
        btnPesq = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("RELATÓRIO DE REQUISITOS");

        jScrollPane1.setViewportView(listReq);

        txtAuthorReq.setText("Digite o nome do autor");

        txtNomeReq.setText("Digite o nome da Requisição");

        txtIdReq.setText("Digite o ID da Requisição");

        btnPesq.setText("Pesquisar");
        btnPesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesqActionPerformed(evt);
            }
        });

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAuthorReq, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(txtNomeReq, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(txtIdReq, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(btnPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(285, 285, 285))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAuthorReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesq))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesqActionPerformed
        // TODO add your handling code here:

        DefaultListModel model = new DefaultListModel();

        if (!txtAuthorReq.getText().contains("Digite o nome do autor")) {
            System.out.println("Entrou no usuario");
            conexao connect = new conexao();
            JDBCusuario bd = new JDBCusuario(connect.abrirConexao());
            ArrayList<usuario> userList = bd.buscarUsuarioPorNome(txtAuthorReq.getText());
            usuario user = userList.get(0);

            int idUser = user.getIdUsuario();

            JDBCrequisito bdReq = new JDBCrequisito(connect.abrirConexao());

            ArrayList<requisito> projectList = bdReq.buscarRequisitosPorIDuser(idUser);

            connect.fecharConexao();

            if (projectList.size() > 0) {
                for (int i = 0; i < projectList.size(); i++) {
                    requisito project = projectList.get(i);
                    model.addElement("ID: " + project.getIdRequisito() + " | Nome Projeto:  " + project.getNome() + " | Modulo: " + project.getModulo() + " | Funcionalidade " + project.getFuncionalidade() + " |Data Criação: " + formato.format(project.getDataCriacao())
                            + " | Ultima Modificação: " + formato.format(project.getUltimaMod()) + " |Versão: " + project.getVersao() + " |Prioridade: " + project.getPrioridade() + " |Complexibilidade: " + project.getComplexibilidade() + " |Esforço Estimado: " + project.getEsfEstimado()
                            + " |Estado: " + project.getEstado() + " |Fase: " + project.getFase() + " |Descrição: " + project.getDescricao() + " |ID projeto: " + project.getIdProjeto() + " |Nome Usuario: " + user.getNomeCompleto());
                    model.addElement("");
                }
            } else {
                model.addElement("Sem Resultado");
            }

        }

        if (!txtNomeReq.getText().contains("Digite o nome da Requisição")) {
            conexao connect = new conexao();

            JDBCrequisito bdProject = new JDBCrequisito(connect.abrirConexao());

          

            ArrayList<requisito> projectList = bdProject.buscarRequisitosPorNome(txtNomeReq.getText());

            connect.fecharConexao();

            System.out.println(projectList.size());

            if (projectList.size() > 0) {
                for (int i = 0; i < projectList.size(); i++) {
                    requisito project = projectList.get(i);
                    model.addElement("ID: " + project.getIdRequisito() + " | Nome Projeto:  " + project.getNome() + " | Modulo: " + project.getModulo() + " | Funcionalidade " + project.getFuncionalidade() + " |Data Criação: " + formato.format(project.getDataCriacao())
                            + " | Ultima Modificação: " + formato.format(project.getUltimaMod()) + " |Versão: " + project.getVersao() + " |Prioridade: " + project.getPrioridade() + " |Complexibilidade: " + project.getComplexibilidade() + " |Esforço Estimado: " + project.getEsfEstimado()
                            + " |Estado: " + project.getEstado() + " |Fase: " + project.getFase() + " |Descrição: " + project.getDescricao() + " |ID projeto: " + project.getIdProjeto() + " |Nome Usuario: " + project.getNomeUsuario());
                    model.addElement("");
                }
            } else {
                model.addElement("Sem Resultado");
            }
        }

        if (!txtIdReq.getText().contains("Digite o ID da Requisição")) {
            conexao connect = new conexao();

            JDBCrequisito bdProject = new JDBCrequisito(connect.abrirConexao());

           
            ArrayList<requisito> projectList = bdProject.buscarRequisitoID(Integer.parseInt(txtIdReq.getText()));

            connect.fecharConexao();

            System.out.println(projectList.size());

            if (projectList.size() > 0) {
                for (int i = 0; i < projectList.size(); i++) {
                    requisito project = projectList.get(i);
                    model.addElement("ID: " + project.getIdRequisito() + " | Nome Projeto:  " + project.getNome() + " | Modulo: " + project.getModulo() + " | Funcionalidade " + project.getFuncionalidade() + " |Data Criação: " + formato.format(project.getDataCriacao())
                            + " | Ultima Modificação: " + formato.format(project.getUltimaMod()) + " |Versão: " + project.getVersao() + " |Prioridade: " + project.getPrioridade() + " |Complexibilidade: " + project.getComplexibilidade() + " |Esforço Estimado: " + project.getEsfEstimado()
                            + " |Estado: " + project.getEstado() + " |Fase: " + project.getFase() + " |Descrição: " + project.getDescricao() + " |ID projeto: " + project.getIdProjeto() + " |Nome Usuario: " + project.getNomeUsuario());
                    model.addElement("");
                }
            } else {
                model.addElement("Sem Resultado");
            }
        }

        listReq.setModel(model);
    }//GEN-LAST:event_btnPesqActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FrmRelatorios relatorios = new FrmRelatorios();
        relatorios.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRelReq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRelReq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRelReq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRelReq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRelReq().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesq;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listReq;
    private javax.swing.JTextField txtAuthorReq;
    private javax.swing.JTextField txtIdReq;
    private javax.swing.JTextField txtNomeReq;
    // End of variables declaration//GEN-END:variables
}
